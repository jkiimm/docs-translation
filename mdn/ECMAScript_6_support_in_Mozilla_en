{{jsSidebar("New_in_JS")}}
ECMAScript 6 is the next version of the standard, code-named "ES.next".
Specification drafts can be found on the official ECMA wiki.
The first working draft based on ECMAScript 5.1, was published on July 12, 2011 as "ES.next".
As of August 2014, ECMAScript 6 is already feature frozen,
will be finished during 2015
and will start to go into the official publication process starting in March 2015 (to be finished in June 2015).

A channel for feedback on ECMAScript standards is es-discuss.

Already supported features

The following features are already implemented in Firefox:

Standard library

Additions to the Array object

{{jsxref("Array")}} iteration with for...of (Firefox 13)
{{jsxref("Array.from()")}} (Firefox 32)
{{jsxref("Array.of()")}} (Firefox 25)
{{jsxref("Array.prototype.fill()")}} (Firefox 31)
{{jsxref("Array.prototype.find()")}}, {{jsxref("Array.prototype.findIndex()")}} (Firefox 25)
{{jsxref("Array.prototype.entries()")}},
{{jsxref("Array.prototype.keys()")}} (Firefox 28)
{{jsxref("Array.prototype.copyWithin()")}} (Firefox 32)
New Map and Set objects, and their weak counterparts

{{jsxref("Map")}} (Firefox 13)
{{jsxref("Map")}} iteration with for...of (Firefox 17)
{{jsxref("Map.prototype.forEach()")}} (Firefox 25)
{{jsxref("Map.prototype.entries()")}},
{{jsxref("Map.prototype.keys()")}},
{{jsxref("Map.prototype.values()")}} (Firefox 20)
Constructor argument: new {{jsxref("Map")}}(null) (Firefox 37)
Monkey-patched set() in Constructor (Firefox 37)
{{jsxref("Set")}} (Firefox 13)
{{jsxref("Set")}} iteration with for...of (Firefox 17)
{{jsxref("Set.prototype.forEach()")}} (Firefox 25)
{{jsxref("Set.prototype.entries()")}},
{{jsxref("Set.prototype.keys()")}},
{{jsxref("Set.prototype.values()")}} (Firefox 24)
Constructor argument: new {{jsxref("Set")}}(null) (Firefox 37)
Monkey-patched add() in Constructor (Firefox 37)
{{jsxref("WeakMap")}} (Firefox 6)
{{jsxref("WeakMap.clear()")}} (Firefox 20)
optional iterable argument in {{jsxref("WeakMap")}} constructor (Firefox 36)
Constructor argument: new {{jsxref("WeakMap")}}(null) (Firefox 37)
Monkey-patched set() in Constructor (Firefox 37)
{{jsxref("WeakSet")}} (Firefox 34)
Constructor argument: new {{jsxref("WeakSet")}}(null) (Firefox 37)
Monkey-patched add() in Constructor (Firefox 37)
  New Math functions

{{jsxref("Math.imul()")}} (Firefox 20)
{{jsxref("Math.clz32()")}} (Firefox 31)
{{jsxref("Math.fround()")}} (Firefox 26)
{{jsxref("Math.log10()")}}, {{jsxref("Math.log2()")}}, {{jsxref("Math.log1p()")}}, {{jsxref("Math.expm1()")}}, {{jsxref("Math.cosh()")}}, {{jsxref("Math.sinh()")}}, {{jsxref("Math.tanh()")}}, {{jsxref("Math.acosh()")}}, {{jsxref("Math.asinh()")}}, {{jsxref("Math.atanh()")}}, {{jsxref("Math.hypot()")}}, {{jsxref("Math.trunc()")}}, {{jsxref("Math.sign()")}}, {{jsxref("Math.cbrt()")}} (Firefox 25)
Additions to the Number object

{{jsxref("Number.isNaN()")}} (Firefox 16)
{{jsxref("Number.isFinite()")}} (Firefox 16)
{{jsxref("Number.isInteger()")}} (Firefox 16)
{{jsxref("Number.parseInt()")}} (Firefox 25)
{{jsxref("Number.parseFloat()")}} (Firefox 25)
{{jsxref("Number.EPSILON")}} (Firefox 25)
{{jsxref("Number.MAX_SAFE_INTEGER")}}, {{jsxref("Number.MIN_SAFE_INTEGER")}} (Firefox 31)
{{jsxref("Number.isSafeInteger()")}} (Firefox 32)
Additions to the Object object

{{jsxref("Object.is()")}} (Firefox 22)
{{jsxref("Object.setPrototypeOf()")}} (Firefox 31)
{{jsxref("Object.assign()")}} (Firefox 34)
{{jsxref("Object.getOwnPropertySymbols()")}} (Firefox 33)
New Promise object

{{jsxref("Promise")}} (Firefox 24, enabled by default in Firefox 29)
Additions to the RegExp object

{{jsxref("RegExp")}} sticky (y) flag (Firefox 3)
generic {{jsxref("RegExp.prototype.toString")}} (Firefox 39)
Additions to the String object

{{jsxref("String.fromCodePoint()")}} (Firefox 29)
{{jsxref("String.prototype.codePointAt()")}} (Firefox 29)
{{jsxref("String.prototype.startsWith()")}}, {{jsxref("String.prototype.endsWith()")}} (Firefox 17)
{{jsxref("String.prototype.includes()")}} (Firefox 17)
{{jsxref("String.prototype.repeat()")}} (Firefox 24)
{{jsxref("String.prototype.normalize()")}} (Firefox 31)
{{jsxref("String.raw()")}} (Firefox 34)
\{{jsxref("Global_Objects/String", "u{XXXXXX} unicode codepoing", "", 1)}} (Firefox 40)
New Symbol object

{{jsxref("Symbol")}} (Firefox 36)
{{jsxref("Symbol.iterator")}} (Firefox 36)
{{jsxref("Symbol.for()")}} - global Symbol registry (Firefox 36)
{{jsxref("Symbol.match")}} (Firefox 40)
New class syntax

Basic support (Firefox 39)
  extends support (Firefox 39)
  static method definitions (Firefox 39)
  Typed Arrays

  Typed arrays are specified as part of ECMAScript 6 and no longer in their own specification.

{{jsxref("ArrayBuffer")}}
{{jsxref("DataView")}}
{{jsxref("Int8Array")}}
{{jsxref("Uint8Array")}}
{{jsxref("Uint8ClampedArray")}}
{{jsxref("Int16Array")}}
{{jsxref("Uint16Array")}}
{{jsxref("Int32Array")}}
{{jsxref("Uint32Array")}}
{{jsxref("Float32Array")}}
{{jsxref("Float64Array")}}
Expressions and operators

Spread operator for arrays (Firefox 16)
  use Symbol.iterator property (Firefox 36)
  Spread operator for function calls (Firefox 27)
  use Symbol.iterator property (Firefox 36)
  Statements

  for...of (Firefox 13)
  works in terms of .iterator() and .next() (Firefox 17)
  use "@@iterator" property (Firefox 27)
  use Symbol.iterator property (Firefox 36)
  Functions

  Rest parameters (Firefox 15)
  Default parameters (Firefox 15)
  Arrow functions (Firefox 22)
{{jsxref("Statements/function*", "Generator function")}} (Firefox 26)
{{jsxref("Operators/yield", "yield")}} (Firefox 26)
{{jsxref("Operators/yield*", "yield*")}} (Firefox 27)
Other features

Binary and octal numeric literals (Firefox 25)
  Template strings (Firefox 34)
  Object initializer: shorthand property names (Firefox 33)
  Object initializer: computed property names (Firefox 34)
  Object initializer: shorthand method names (Firefox 34)
  Features with compliance and stabilization changes ongoing

  The following features are (partially) implemented in Firefox,
  but were introduced long before ES6 or are still discussed in the ECMA TC39 standards body.

  Legacy iterators and generators (JS 1.7, Firefox 2)
  ES6 iterators and generators implemented in Firefox 26+
  Destructuring assignment (JS 1.7, Firefox 2) (ES6 compliance {{bug("950547")}})
{{jsxref("Statements/const", "const")}} (JS 1.5, Firefox 1.0) (ES6 compliance {{bug("950547")}})
{{jsxref("Statements/let", "let")}} (JS 1.7, Firefox 2) (ES6 compliance {{bug("950547")}})
{{jsxref("Proxy")}} (Firefox 18) (ES6 compliance {{bug("978228")}})
Features not yet supported

The following features are in the ECMAScript 6 draft specification,
    but not yet implemented in Firefox:

Modules (bug 568953)
  import syntax
  export syntax
{{jsxref("Array.prototype.values()")}} ({{bug("875433")}})
Reflect ({{bug("987514")}})
\u{nnnnnn} Unicode code point escapes ({{bug("952985")}})
Well-known symbols
RegExp "u" flag
See also

ECMAScript web site
ECMAScript 6 specification drafts
Mozilla ES6 tracking bug
ECMAScript 6 support across browsers
